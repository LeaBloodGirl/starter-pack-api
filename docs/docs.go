// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/user": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get Users",
                "operationId": "1",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api_authentication.UserResponse"
                            }
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "Create User",
                "operationId": "1",
                "parameters": [
                    {
                        "description": "email of the new user",
                        "name": "email",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "login of the new user",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "the application authorized for the user",
                        "name": "app_name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_authentication.UserResponse"
                        }
                    }
                }
            }
        },
        "/user/{uuid}": {
            "get": {
                "description": "This is the description for getting a thing by its UUID. Which can be longer,",
                "summary": "This is the function to get a user by it's id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of a user",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_authentication.UserResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "This is the description for getting a thing by its UUID. Which can be longer,",
                "summary": "This is the function to update a user by it's id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of a user",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The date until token expiration",
                        "name": "valid_until",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The application for the token",
                        "name": "app_name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_authentication.UserResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "This is the description for getting a thing by its UUID. Which can be longer,",
                "summary": "This is the function to delete a user by it's id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of a user",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User Deleted Successfully!",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api_authentication.UserResponse": {
            "type": "object",
            "properties": {
                "appName": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "login": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "validUntil": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/v1",
	Schemes:          []string{},
	Title:            "API TISSEO GO",
	Description:      "This is the API",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
